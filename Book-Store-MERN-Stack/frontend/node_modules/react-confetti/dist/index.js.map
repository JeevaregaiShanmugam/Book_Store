{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Particle.ts","../src/ParticleGenerator.ts","../src/Confetti.ts","../src/ReactConfetti.tsx"],"sourcesContent":["import { ICircle } from './Circle'\nimport { IPoint } from './Point'\nimport { IRect } from './Rect'\n\nexport function norm(value: number, min: number, max: number) {\n  return (value - min) / (max - min)\n}\n\nexport function lerp(lnorm: number, min: number, max: number) {\n  return (max - min) * lnorm + min\n}\n\nexport function map(\n  value: number,\n  sourceMin: number,\n  sourceMax: number,\n  destMin: number,\n  destMax: number,\n) {\n  return lerp(norm(value, sourceMin, sourceMax), destMin, destMax)\n}\n\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max))\n}\n\nexport function distance(p0: IPoint, p1: IPoint) {\n  const dx = p1.x - p0.x\n  const dy = p1.y - p0.y\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nexport function distanceXY(x0: number, y0: number, x1: number, y1: number) {\n  const dx = x1 - x0\n  const dy = y1 - y0\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nexport function circleCollision(c0: ICircle, c1: ICircle) {\n  return distance(c0, c1) <= c0.radius + c1.radius\n}\n\nexport function circlePointCollision(x: number, y: number, circle: ICircle) {\n  return distanceXY(x, y, circle.x, circle.y) < circle.radius\n}\n\nexport function inRange(value: number, min: number, max: number) {\n  return value >= Math.min(min, max) && value <= Math.max(min, max)\n}\n\nexport function pointInRect(p: IPoint, rect: IRect) {\n  return (\n    inRange(p.x, rect.x, rect.x + rect.w) &&\n    inRange(p.y, rect.y, rect.y + rect.h)\n  )\n}\n\nexport function rangeIntersect(\n  min0: number,\n  max0: number,\n  min1: number,\n  max1: number,\n) {\n  return (\n    Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1)\n  )\n}\n\nexport function rectIntersect(r0: IRect, r1: IRect) {\n  return (\n    rangeIntersect(r0.x, r0.x + r0.w, r1.x, r1.x + r1.w) &&\n    rangeIntersect(r0.y, r0.y + r0.h, r1.y, r1.y + r1.h)\n  )\n}\n\nexport function degreesToRads(degrees: number) {\n  return (degrees * Math.PI) / 180\n}\n\nexport function radsToDegrees(radians: number) {\n  return (radians * 180) / Math.PI\n}\n\nexport function randomRange(min: number, max: number) {\n  return min + Math.random() * (max - min)\n}\n\nexport function randomInt(min: number, max: number) {\n  return Math.floor(min + Math.random() * (max - min + 1))\n}\n","import { IConfettiOptions } from './Confetti'\nimport { degreesToRads, randomInt, randomRange } from './utils'\n\nexport enum ParticleShape {\n  Circle = 0,\n  Square = 1,\n  Strip = 2,\n}\n\nenum RotationDirection {\n  Positive = 1,\n  Negative = -1,\n}\n\nexport default class Particle {\n  constructor(\n    context: CanvasRenderingContext2D,\n    getOptions: () => IConfettiOptions,\n    x: number,\n    y: number,\n  ) {\n    this.getOptions = getOptions\n    const { colors, initialVelocityX, initialVelocityY } = this.getOptions()\n    this.context = context\n    this.x = x\n    this.y = y\n    this.w = randomRange(5, 20)\n    this.h = randomRange(5, 20)\n    this.radius = randomRange(5, 10)\n    this.vx =\n      typeof initialVelocityX === 'number'\n        ? randomRange(-initialVelocityX, initialVelocityX)\n        : randomRange(initialVelocityX.min, initialVelocityX.max)\n    this.vy =\n      typeof initialVelocityY === 'number'\n        ? randomRange(-initialVelocityY, 0)\n        : randomRange(initialVelocityY.min, initialVelocityY.max)\n    this.shape = randomInt(0, 2)\n    this.angle = degreesToRads(randomRange(0, 360))\n    this.angularSpin = randomRange(-0.2, 0.2)\n    this.color = colors[Math.floor(Math.random() * colors.length)]\n    this.rotateY = randomRange(0, 1)\n    this.rotationDirection = randomRange(0, 1)\n      ? RotationDirection.Positive\n      : RotationDirection.Negative\n  }\n\n  context: CanvasRenderingContext2D\n\n  radius: number\n\n  x: number\n\n  y: number\n\n  w: number\n\n  h: number\n\n  vx: number\n\n  vy: number\n\n  shape: ParticleShape\n\n  angle: number\n\n  angularSpin: number\n\n  color: string\n\n  // Actually used as scaleY to simulate rotation cheaply\n  rotateY: number\n\n  rotationDirection: RotationDirection\n\n  getOptions: () => IConfettiOptions\n\n  update() {\n    const { gravity, wind, friction, opacity, drawShape } = this.getOptions()\n    this.x += this.vx\n    this.y += this.vy\n    this.vy += gravity\n    this.vx += wind\n    this.vx *= friction\n    this.vy *= friction\n    if (\n      this.rotateY >= 1 &&\n      this.rotationDirection === RotationDirection.Positive\n    ) {\n      this.rotationDirection = RotationDirection.Negative\n    } else if (\n      this.rotateY <= -1 &&\n      this.rotationDirection === RotationDirection.Negative\n    ) {\n      this.rotationDirection = RotationDirection.Positive\n    }\n\n    const rotateDelta = 0.1 * this.rotationDirection\n\n    this.rotateY += rotateDelta\n    this.angle += this.angularSpin\n    this.context.save()\n    this.context.translate(this.x, this.y)\n    this.context.rotate(this.angle)\n    this.context.scale(1, this.rotateY)\n    this.context.rotate(this.angle)\n    this.context.beginPath()\n    this.context.fillStyle = this.color\n    this.context.strokeStyle = this.color\n    this.context.globalAlpha = opacity\n    this.context.lineCap = 'round'\n    this.context.lineWidth = 2\n    if (drawShape && typeof drawShape === 'function') {\n      drawShape.call(this, this.context)\n    } else {\n      switch (this.shape) {\n        case ParticleShape.Circle: {\n          this.context.beginPath()\n          this.context.arc(0, 0, this.radius, 0, 2 * Math.PI)\n          this.context.fill()\n          break\n        }\n        case ParticleShape.Square: {\n          this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h)\n          break\n        }\n        case ParticleShape.Strip: {\n          this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h)\n          break\n        }\n      }\n    }\n    this.context.closePath()\n    this.context.restore()\n  }\n}\n","import { IConfettiOptions } from './Confetti'\nimport Particle from './Particle'\nimport { IRect } from './Rect'\nimport { randomRange } from './utils'\n\nexport interface IParticleGenerator extends IRect {\n  removeParticleAt: (index: number) => void\n  getParticle: () => void\n  animate: () => boolean\n  particles: Particle[]\n  particlesGenerated: number\n}\n\nexport default class ParticleGenerator implements IParticleGenerator {\n  constructor(canvas: HTMLCanvasElement, getOptions: () => IConfettiOptions) {\n    this.canvas = canvas\n    const ctx = this.canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('Could not get canvas context')\n    }\n    this.context = ctx\n    this.getOptions = getOptions\n  }\n\n  canvas: HTMLCanvasElement\n\n  context: CanvasRenderingContext2D\n\n  getOptions: () => IConfettiOptions\n\n  x = 0\n\n  y = 0\n\n  w = 0\n\n  h = 0\n\n  lastNumberOfPieces = 0\n\n  tweenInitTime: number = Date.now()\n\n  particles: Particle[] = []\n\n  particlesGenerated = 0\n\n  removeParticleAt = (i: number) => {\n    this.particles.splice(i, 1)\n  }\n\n  getParticle = () => {\n    const newParticleX = randomRange(this.x, this.w + this.x)\n    const newParticleY = randomRange(this.y, this.h + this.y)\n    return new Particle(\n      this.context,\n      this.getOptions,\n      newParticleX,\n      newParticleY,\n    )\n  }\n\n  animate = (): boolean => {\n    const { canvas, context, particlesGenerated, lastNumberOfPieces } = this\n    const {\n      run,\n      recycle,\n      numberOfPieces,\n      debug,\n      tweenFunction,\n      tweenDuration,\n    } = this.getOptions()\n    if (!run) {\n      return false\n    }\n\n    const nP = this.particles.length\n    const activeCount = recycle ? nP : particlesGenerated\n\n    const now = Date.now()\n\n    // Initial population\n    if (activeCount < numberOfPieces) {\n      // Use the numberOfPieces prop as a key to reset the easing timing\n      if (lastNumberOfPieces !== numberOfPieces) {\n        this.tweenInitTime = now\n        this.lastNumberOfPieces = numberOfPieces\n      }\n      const { tweenInitTime } = this\n      // Add more than one piece per loop, otherwise the number of pieces would\n      // be limitted by the RAF framerate\n      const progressTime =\n        now - tweenInitTime > tweenDuration\n          ? tweenDuration\n          : Math.max(0, now - tweenInitTime)\n      const tweenedVal = tweenFunction(\n        progressTime,\n        activeCount,\n        numberOfPieces,\n        tweenDuration,\n      )\n      const numToAdd = Math.round(tweenedVal - activeCount)\n      for (let i = 0; i < numToAdd; i++) {\n        this.particles.push(this.getParticle())\n      }\n      this.particlesGenerated += numToAdd\n    }\n    if (debug) {\n      // Draw debug text\n      context.font = '12px sans-serif'\n      context.fillStyle = '#333'\n      context.textAlign = 'right'\n      context.fillText(\n        `Particles: ${nP}`,\n        canvas.width - 10,\n        canvas.height - 20,\n      )\n    }\n\n    // Maintain the population\n    this.particles.forEach((p, i) => {\n      // Update each particle's position\n      p.update()\n      // Prune the off-canvas particles\n      if (\n        p.y > canvas.height ||\n        p.y < -100 ||\n        p.x > canvas.width + 100 ||\n        p.x < -100\n      ) {\n        if (recycle && activeCount <= numberOfPieces) {\n          // Replace the particle with a brand new one\n          this.particles[i] = this.getParticle()\n        } else {\n          this.removeParticleAt(i)\n        }\n      }\n    })\n    return nP > 0 || activeCount < numberOfPieces\n  }\n}\n","import * as tweens from 'tween-functions'\nimport ParticleGenerator from './ParticleGenerator'\nimport { IRect } from './Rect'\n\nexport interface IConfettiOptions {\n  /**\n   * Width of the component\n   * @default window.width\n   */\n  width: number\n  /**\n   * Height of the component\n   * @default window.height\n   */\n  height: number\n  /**\n   * Max number of confetti pieces to render.\n   * @default 200\n   */\n  numberOfPieces: number\n  /**\n   * Slows movement of pieces. (lower number = slower confetti)\n   * @default 0.99\n   */\n  friction: number\n  /**\n   * Blows confetti along the X axis.\n   * @default 0\n   */\n  wind: number\n  /**\n   * How fast it falls (pixels per frame)\n   * @default 0.1\n   */\n  gravity: number\n  /**\n   * How fast the confetti is emitted horizontally\n   * @default 4\n   */\n  initialVelocityX: { min: number; max: number } | number\n  /**\n   * How fast the confetti is emitted vertically\n   * @default 10\n   */\n  initialVelocityY: { min: number; max: number } | number\n  /**\n   * Array of colors to choose from.\n   */\n  colors: string[]\n  /**\n   * Opacity of the confetti.\n   * @default 1\n   */\n  opacity: number\n  /**\n   * If false, only numberOfPieces will be emitted and then stops. If true, when a confetto goes offscreen, a new one will be emitted.\n   * @default true\n   */\n  recycle: boolean\n  /**\n   * If false, stops the requestAnimationFrame loop.\n   * @default true\n   */\n  run: boolean\n  /**\n   * The frame rate of the animation. If set, the animation will be throttled to that frame rate.\n   * @default undefined\n   */\n  frameRate?: number\n  /**\n   * Renders some debug text on the canvas.\n   * @default false\n   */\n  debug: boolean\n  /**\n   * A Rect defining the area where the confetti will spawn.\n   * @default {\n   *   x: 0,\n   *   y: 0,\n   *   w: canvas.width,\n   *   h: 0\n   * }\n   */\n  confettiSource: IRect\n  /**\n   * Controls the rate at which confetti is spawned.\n   * @default easeInOutQuad\n   */\n  tweenFunction: (\n    currentTime: number,\n    currentValue: number,\n    targetValue: number,\n    duration: number,\n    s?: number,\n  ) => number\n  /**\n   * Number of milliseconds it should take to spawn numberOfPieces.\n   * @default 5000\n   */\n  tweenDuration: number\n  /**\n   * Function to draw your own confetti shapes.\n   */\n  drawShape?: (context: CanvasRenderingContext2D) => void\n  /**\n   * Function called when all confetti has fallen off-canvas.\n   */\n  onConfettiComplete?: (confettiInstance?: Confetti) => void\n}\n\nexport const confettiDefaults: Pick<\n  IConfettiOptions,\n  Exclude<keyof IConfettiOptions, 'confettiSource'>\n> = {\n  width: typeof window !== 'undefined' ? window.innerWidth : 300,\n  height: typeof window !== 'undefined' ? window.innerHeight : 200,\n  numberOfPieces: 200,\n  friction: 0.99,\n  wind: 0,\n  gravity: 0.1,\n  initialVelocityX: 4,\n  initialVelocityY: 10,\n  colors: [\n    '#f44336',\n    '#e91e63',\n    '#9c27b0',\n    '#673ab7',\n    '#3f51b5',\n    '#2196f3',\n    '#03a9f4',\n    '#00bcd4',\n    '#009688',\n    '#4CAF50',\n    '#8BC34A',\n    '#CDDC39',\n    '#FFEB3B',\n    '#FFC107',\n    '#FF9800',\n    '#FF5722',\n    '#795548',\n  ],\n  opacity: 1.0,\n  debug: false,\n  tweenFunction: tweens.easeInOutQuad,\n  tweenDuration: 5000,\n  recycle: true,\n  run: true,\n}\n\nexport class Confetti {\n  constructor(canvas: HTMLCanvasElement, opts: Partial<IConfettiOptions>) {\n    this.canvas = canvas\n    const ctx = this.canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('Could not get canvas context')\n    }\n    this.context = ctx\n\n    this.generator = new ParticleGenerator(\n      this.canvas,\n      () => this.options as IConfettiOptions,\n    )\n    this.options = opts\n    this.update()\n  }\n\n  canvas: HTMLCanvasElement\n\n  context: CanvasRenderingContext2D\n\n  _options!: IConfettiOptions\n\n  generator: ParticleGenerator\n\n  rafId?: number\n\n  lastFrameTime: number = Date.now()\n\n  get options(): Partial<IConfettiOptions> {\n    return this._options\n  }\n\n  set options(opts: Partial<IConfettiOptions>) {\n    const lastRunState = this._options?.run\n    const lastRecycleState = this._options?.recycle\n    this.setOptionsWithDefaults(opts)\n    if (this.generator) {\n      Object.assign(this.generator, this.options.confettiSource)\n      if (\n        typeof opts.recycle === 'boolean' &&\n        opts.recycle &&\n        lastRecycleState === false\n      ) {\n        this.generator.lastNumberOfPieces = this.generator.particles.length\n      }\n    }\n    if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n      this.update()\n    }\n  }\n\n  setOptionsWithDefaults = (opts: Partial<IConfettiOptions>) => {\n    const computedConfettiDefaults = {\n      confettiSource: {\n        x: 0,\n        y: 0,\n        w: this.canvas.width,\n        h: 0,\n      },\n    }\n    this._options = {\n      ...computedConfettiDefaults,\n      ...confettiDefaults,\n      ...opts,\n    }\n    Object.assign(this, opts.confettiSource)\n  }\n\n  update = () => {\n    const {\n      options: { run, onConfettiComplete, frameRate },\n      canvas,\n      context,\n    } = this\n    // Throttle the frame rate if set\n    if (frameRate) {\n      const now = Date.now()\n      const elapsed = now - this.lastFrameTime\n      if (elapsed < 1000 / frameRate) {\n        this.rafId = requestAnimationFrame(this.update)\n        return\n      }\n      this.lastFrameTime = now - (elapsed % frameRate)\n    }\n\n    if (run) {\n      context.fillStyle = 'white'\n      context.clearRect(0, 0, canvas.width, canvas.height)\n    }\n    if (this.generator.animate()) {\n      this.rafId = requestAnimationFrame(this.update)\n    } else {\n      if (\n        onConfettiComplete &&\n        typeof onConfettiComplete === 'function' &&\n        this.generator.particlesGenerated > 0\n      ) {\n        onConfettiComplete.call(this, this)\n      }\n      this._options.run = false\n    }\n  }\n\n  reset = () => {\n    if (this.generator && this.generator.particlesGenerated > 0) {\n      this.generator.particlesGenerated = 0\n      this.generator.particles = []\n      this.generator.lastNumberOfPieces = 0\n    }\n  }\n\n  stop = () => {\n    this.options = { run: false }\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = undefined\n    }\n  }\n}\n\nexport default Confetti\n","import React from 'react'\nimport Confetti, { IConfettiOptions, confettiDefaults } from './Confetti'\n\nconst ref = React.createRef<HTMLCanvasElement>()\n\nexport type Props = Partial<IConfettiOptions> &\n  React.CanvasHTMLAttributes<HTMLCanvasElement> & {\n    canvasRef?: React.Ref<HTMLCanvasElement>\n  }\n\nclass ReactConfettiInternal extends React.Component<Props> {\n  static readonly defaultProps = {\n    ...confettiDefaults,\n  }\n\n  static readonly displayName = 'ReactConfetti'\n\n  constructor(props: Props) {\n    super(props)\n    this.canvas = (props.canvasRef as React.RefObject<HTMLCanvasElement>) || ref\n  }\n\n  canvas: React.RefObject<HTMLCanvasElement | null> = React.createRef()\n\n  confetti?: Confetti\n\n  componentDidMount() {\n    if (this.canvas.current) {\n      const opts = extractCanvasProps(this.props)[0]\n      this.confetti = new Confetti(this.canvas.current, opts)\n    }\n  }\n\n  componentDidUpdate() {\n    const confettiOptions = extractCanvasProps(this.props)[0]\n    if (this.confetti) {\n      this.confetti.options = confettiOptions as IConfettiOptions\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.confetti) {\n      this.confetti.stop()\n    }\n    this.confetti = undefined\n  }\n\n  render() {\n    const [confettiOptions, passedProps] = extractCanvasProps(this.props)\n    const canvasStyles = {\n      zIndex: 2,\n      position: 'absolute' as const,\n      pointerEvents: 'none' as const,\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      ...passedProps.style,\n    }\n    return (\n      <canvas\n        width={confettiOptions.width}\n        height={confettiOptions.height}\n        ref={this.canvas}\n        {...passedProps}\n        style={canvasStyles}\n      />\n    )\n  }\n}\n\ninterface Refs {\n  [key: string]: React.Ref<HTMLElement>\n}\nfunction extractCanvasProps(\n  props: Partial<IConfettiOptions> | any,\n): [\n  Partial<IConfettiOptions>,\n  Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>>,\n  Refs,\n] {\n  const confettiOptions: Partial<IConfettiOptions> = {}\n  const refs: Refs = {}\n  const rest: any = {}\n  const confettiOptionKeys = [\n    ...Object.keys(confettiDefaults),\n    'confettiSource',\n    'drawShape',\n    'onConfettiComplete',\n    'frameRate',\n  ]\n  const refProps = ['canvasRef']\n  for (const prop in props) {\n    const val = props[prop as string]\n    if (confettiOptionKeys.includes(prop)) {\n      confettiOptions[prop as keyof IConfettiOptions] = val\n    } else if (refProps.includes(prop)) {\n      refProps[prop as any] = val\n    } else {\n      rest[prop] = val\n    }\n  }\n  return [confettiOptions, rest, refs]\n}\n\nexport const ReactConfetti = React.forwardRef<HTMLCanvasElement, Props>(\n  (props, ref) => <ReactConfettiInternal canvasRef={ref} {...props} />,\n)\n\nexport default ReactConfetti\n"],"names":["degreesToRads","degrees","Math","PI","randomRange","min","max","random","randomInt","floor","ParticleShape","RotationDirection","Particle","context","getOptions","x","y","_classCallCheck","_defineProperty","_this$getOptions","colors","initialVelocityX","initialVelocityY","w","h","radius","vx","vy","shape","angle","angularSpin","color","length","rotateY","rotationDirection","Positive","Negative","_createClass","key","value","update","_this$getOptions2","gravity","wind","friction","opacity","drawShape","rotateDelta","save","translate","rotate","scale","beginPath","fillStyle","strokeStyle","globalAlpha","lineCap","lineWidth","call","Circle","arc","fill","Square","fillRect","Strip","closePath","restore","ParticleGenerator","canvas","_this","Date","now","i","particles","splice","newParticleX","newParticleY","particlesGenerated","lastNumberOfPieces","run","recycle","numberOfPieces","debug","tweenFunction","tweenDuration","nP","activeCount","tweenInitTime","progressTime","tweenedVal","numToAdd","round","push","getParticle","font","textAlign","fillText","concat","width","height","forEach","p","removeParticleAt","ctx","getContext","Error","confettiDefaults","window","innerWidth","innerHeight","tweens","easeInOutQuad","Confetti","opts","computedConfettiDefaults","confettiSource","_options","_objectSpread","Object","assign","_this$options","options","onConfettiComplete","frameRate","elapsed","lastFrameTime","rafId","requestAnimationFrame","clearRect","generator","animate","cancelAnimationFrame","undefined","get","set","_this$_options","_this$_options2","lastRunState","lastRecycleState","setOptionsWithDefaults","ref","React","createRef","ReactConfettiInternal","_React$Component","props","_callSuper","canvasRef","_inherits","componentDidMount","current","extractCanvasProps","confetti","componentDidUpdate","confettiOptions","componentWillUnmount","stop","render","_extractCanvasProps","_extractCanvasProps2","_slicedToArray","passedProps","canvasStyles","zIndex","position","pointerEvents","top","left","bottom","right","style","createElement","_extends","Component","refs","rest","confettiOptionKeys","_toConsumableArray","keys","refProps","prop","val","includes","ReactConfetti","forwardRef"],"mappings":"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"}